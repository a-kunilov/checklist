// РАСШИРЕНИЕ ЯЗЫКА ЗАПРОСОВ В КД
Настраиваются на закладке "Компоновка данных" конструктора запросов, либо при помощи конструкции {} в тексте запроса.

Расширения используются: 
1. В разделе ВЫБРАТЬ влияет на доступность полей в настройках КД на закладке "Доступные поля",
раздела "Выбранные поля", поле остается даже при отключенном флаге "Автозаполнение" 
на закладке "Наборы данных" конструктора КД:

    Пример: 
        {ВЫБРАТЬ
            Номенклатура.*, // .* - указывает на то что доступными для выбора становятся
                            //      дочерние поля объекта "Номенклатура"
            Склад.*,
            Количество
            }
2. В разделе ГДЕ влияет на доступность полей в "Выбранные поля" на закладке "Отборы"
настроек КД:
    
    Пример:            
        {ГДЕ 
            ТоварныеЗапасы.Товар.*,
            (ТоварныеЗапасы.Дата >= &Дата1), // Включается в запрос макета, только если 
                                             // заполнен параметр &Дата1, если параметр не 
                                             // заполнен, то в запросе после комановки макета
                                             // этого условия не будет.
            (ТоварныеЗапасы.Дата <= &Дата2)
            (ТоварныеЗапасы.Дата >= &Дата1 И ТоварныеЗапасы.Дата <= &Дата2)}} // Здесь оба 
                                            // параметра должны быть заполнены, иначе при формировании
                                            // будет ошибка.
3. Параметры виртуальной таблицы
   Указываются на закладке "Таблицы"(Закладка КД конструктора запросов):

   Пример:
       1. ИЗ
	        РегистрНакопления.ГСМ.Остатки(, {(ВидГСМ = &ВидГСМ), (ТранспортноеСредство = &ТС)}) КАК ГСМОстатки 
                                            // Если параметры заданы, то накладывается условие на виртуальную таблицу
       2. ИЗ
	        РегистрНакопления.ГСМ.Остатки(, {(ВидГСМ = &ВидГСМ), (ТранспортноеСредство).*}) КАК ГСМОстатки 
                                            // Можно указать, что возможны отборы по дочерним полям таблицы
       3. ИЗ
	        РегистрНакопления.ГСМ.Остатки({(&Дата)}, {(ВидГСМ = &ВидГСМ), (ТранспортноеСредство).*}) КАК ГСМОстатки                                     
                                            // Можно задать период виртуальной таблицы, если период не используется, то 
                                            // в запросе не будет использоваться параметр &Дата
4. Соединения с таблицами:
    Пример:
        1. ВЫБРАТЬ
            ОборотыГСМ.ВидГСМ КАК ВидГСМ,
            ОборотыГСМ.КоличествоОборот КАК КоличествоОборот,
            ОстаткиГСМ.КоличествоОстаток КАК КоличествоОстаток // Если пользователь выбранных полях отключит поле "КоличествоОстаток"
        ИЗ
            РегистрНакопления.ОстаткиГСМ.Обороты(, , , ) КАК ОборотыГСМ
                {ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиГСМ.Остатки(, ) КАК ОстаткиГСМ // Тогда это соединение не попадет в запрос
                ПО ОборотыГСМ.ВидГСМ = ОстаткиГСМ.ВидГСМ}                                 // макета и запрос будет выполнятся быстрее
    Это можно сделать также в конструкторе запроса компоновки данных на закладке "Компоновка данных", 
    на закладке "Таблицы" путем снятия флага "Обязательная". Также там есть поле "Номер группы", этот признак отвечает за то какие 
    таблицы влючаются в запрос или исключаются одновременно. 
        2. ВЫБРАТЬ
            Таблица1.Поле1 КАК Поле1,
            Таблица2.Поле1 КАК Поле2, // Отключаем в выбранных полях Поле2, левое соединение с группой #1 из запроса не исключается
            Таблица3.Поле1 КАК Поле3, // При отключении еще и поля 3, из запроса исключается группа #1. При дальнейшем включении
                                      // хотя бы одного поля, включается соединение со всей группой
            Таблица4.Поле1 КАК Поле4
        ИЗ
            Таблица1 КАК Таблица1
                {ЛЕВОЕ СОЕДИНЕНИЕ Таблица2 КАК Таблица2 // Номер группы = 1 
                    ПО Таблица1.Поле1 = Таблица2.Поле1
                ЛЕВОЕ СОЕДИНЕНИЕ Таблица3 КАК Таблица3  // Номер группы = 1
                    ПО Таблица1.Поле1 = Таблица3.Поле1}    
                {ЛЕВОЕ СОЕДИНЕНИЕ Таблица4 КАК Таблица4 // Номер группы = 2
                    ПО Таблица1.Поле1 = Таблица4.Поле1}
